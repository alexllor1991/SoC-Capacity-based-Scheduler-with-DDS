apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-scheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-scheduler-as-kube-scheduler
subjects:
- kind: ServiceAccount
  name: my-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-scheduler-as-volume-scheduler
subjects:
- kind: ServiceAccount
  name: my-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:volume-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: 
    #component: scheduler
    #tier: control-plane
    app: my-scheduler
  name: my-scheduler
  namespace: kube-system
spec:
  selector:
    matchLabels:
      #component: scheduler
      #tier: control-plane
      app: my-scheduler
  replicas: 1
  template:
    metadata:
      labels:
        #component: scheduler
        #tier: control-plane
        #version: second
        app: my-scheduler
    spec:
      serviceAccountName: my-scheduler
      containers:
        #- command:
        #  - /usr/local/bin/kube-scheduler
        #  - --address=0.0.0.0
        #  - --leader-elect=false
        #  - --scheduler-name=my-scheduler
        - name: my-scheduler
          image: my-scheduler:5e6c11a
          imagePullPolicy: Never
      nodeSelector:
        kubernetes.io/hostname: kind-control-plane
      tolerations:
        - key: "node-role.kubernetes.io/master"
          effect: "NoSchedule"
          operator: "Exists"
      hostNetwork: false
      hostPID: false
      volumes: []